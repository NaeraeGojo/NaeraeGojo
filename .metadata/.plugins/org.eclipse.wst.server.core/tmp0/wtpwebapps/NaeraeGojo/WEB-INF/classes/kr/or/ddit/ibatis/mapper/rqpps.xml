<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="rqpps">
	<typeAlias alias="rfpVO" type="kr.or.ddit.vo.RqppsVO"/>
	
	<resultMap class="rfpVO" id="rfpMap">
		<result property="rqpps_code" column="rqpps_code"/>
		<result property="rqpps_notice_agency" column="rqpps_notice_agency"/>
		<result property="rqpps_name" column="rqpps_name"/>
		<result property="emp_code" column="emp_code"/>
		<result property="rqpps_nickname" column="rqpps_nickname"/>
		<result property="rqpps_contents" column="rqpps_contents"/>
		<result property="rqpps_end_date" column="rqpps_end_date"/>
		<result property="rqpps_date" column="rqpps_date"/>
		<result property="rqpps_budget" column="rqpps_budget"/>
		<result property="rqpps_qualification" column="rqpps_qualification"/>
		<result property="rqpps_now_condition" column="rqpps_now_condition"/>
		<result property="mp_code" column="mp_code"/>
		<result property="items" column="rqpps_code" select="suggfi.rfpFiles"/>
	</resultMap>
	<!-- column이 select와 같이 사용되면 select의 파라메터로 전달된다 -->
	<!-- fileitem.fileItems의 결과가 리스트로 만들어지고 items에 저장된다. -->
	
	<sql id="selectAll">
		select * from rqpps
			where rqpps_delete = 'n'
	</sql>
	
	<sql id="searchCondition">
		<dynamic prepend="and">
			<isNotEmpty property="search_keyword">
				<isEqual property="search_keycode" compareValue="TOTAL" open="(" close=")">
					rqpps_name like '%' || #search_keyword# ||'%'
					or rqpps_contents like '%' || #search_keyword# ||'%'
					or rqpps_nickname like '%' || #search_keyword# ||'%'
				</isEqual>				
				<isEqual property="search_keycode" compareValue="TITLE" >
					rqpps_name like '%' || #search_keyword# ||'%'
				</isEqual>				
				<isEqual property="search_keycode" compareValue="CONTENT" >
					rqpps_contents like '%' || #search_keyword# ||'%'
				</isEqual>				
				<isEqual property="search_keycode" compareValue="WRITER" >
					rqpps_nickname like '%' || #search_keyword# ||'%'
				</isEqual>				
			</isNotEmpty>
		</dynamic>
	</sql>

	<insert id="insertRfp" parameterClass="rfpVO">
		<selectKey keyProperty="rqpps_code" resultClass="string">
			select rqpps_seq.nextval from dual
		</selectKey>
		
		insert into rqpps(
							rqpps_code
							,rqpps_notice_agency
							,rqpps_name
							,rqpps_nickname
							,rqpps_contents
							,rqpps_end_date
							,rqpps_date
							,rqpps_budget
							,rqpps_qualification
							,emp_code
							,mp_code
						)
		 
					values(
							 #rqpps_code#
							,#rqpps_notice_agency#
							,#rqpps_name#
							,#rqpps_nickname#
							,#rqpps_contents#
							,#rqpps_end_date#
							,sysdate
							,#rqpps_budget#
							,#rqpps_qualification#
							,#emp_code#
							,#mp_code#
					)
	</insert>
	
	<select id="totalCount" parameterClass="map" resultClass="int">
		select count(rqpps_code)
		  from rqpps
		 where rqpps_delete = 'n'
		<include refid="searchCondition"/>
	</select>
	
	<select id="getRqppsList" parameterClass="map" resultClass="rfpVO">
		select b.*
		from (select rownum rnum, a.*
				from (<include refid="selectAll"/>
						<include refid="searchCondition"/>
						order by rqpps_code asc
						) a ) b
		<![CDATA[						
		where b.rnum <= #startNo#
		and b.rnum >= #endNo#
		]]>		
		order by b.rnum desc
	</select>
	
	
<!-- 	<select id="getMp" parameterClass="map" resultClass="mpVO"> -->
<!-- 		select * from mp -->
<!-- 			where mp_code = #mp_code# -->
<!-- 	</select> -->
	
<!-- 	<update id="updateMp" parameterClass="mpVO"> -->
<!-- 		update mp -->
<!-- 			set mp_begin = #mp_begin# -->
<!-- 				, mp_inter = #mp_inter# -->
<!-- 				, mp_high = #mp_high# -->
<!-- 				, mp_spec = #mp_spec# -->
<!-- 			where mp_code = #mp_code# -->
<!-- 	</update> -->


	<select id="getRqpps" parameterClass="map" resultMap ="rfpMap">
		<include refid="selectAll"/>
		and rqpps_code = #rqpps_code#
	</select>
	
	<update id="updateRfp" parameterClass="rfpVO">
		update rqpps
			set rqpps_budget = #rqpps_budget# 
				, rqpps_contents = #rqpps_contents#
				, rqpps_date = sysdate
				, rqpps_end_date = #rqpps_end_date#
				, rqpps_name = #rqpps_name#
				, rqpps_nickname = #rqpps_nickname#
				, rqpps_notice_agency = #rqpps_notice_agency#
				, rqpps_qualification = #rqpps_qualification#
			where rqpps_code = #rqpps_code#
	</update>
	
	<update id="deleteRfp" parameterClass="map">
		update rqpps
			set rqpps_delete = 'y'
			where rqpps_code = #rqpps_code#
	</update>
	
	<select id="getMyRfp" parameterClass="map" resultClass="rfpVO">
		<include refid="selectAll"/>
		and emp_code = #emp_code#
		and rqpps_now_condition = #rqpps_now_condition#
	</select>
	
	<update id="updateRfpCondition" parameterClass="map">
		update rqpps
			set rqpps_now_condition = #rqpps_now_condition#
			where rqpps_code = #rqpps_code#
	</update>
	
	
</sqlMap>












